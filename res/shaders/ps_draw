// ParticleRenderer

//@vert
#version 330

uniform mat4 proj;

layout(location = 0) in vec4 data[5];
out Data {
	mat4 mx;
	vec4 clr;
	float size;
};

void main() {
	mat4 rot = mat4(1.0);
	rot[0][0] = cos(data[0].z);
	rot[1][0] = -sin(data[0].z);
	rot[0][1] = -rot[1][0];
	rot[1][1] = rot[0][0];

	mat4 trans = mat4(1.0);
	trans[3][0] = data[0].x;
	trans[3][1] = data[0].y;

	mx = proj * trans * rot;
	clr = data[2];
	size = data[1].w;
}



//@geom
#version 330

layout(points) in;
layout(triangle_strip, max_vertices=4) out;

in Data {
	mat4 mx;
	vec4 clr;
	float size;
} dat[];
out vec2 tc;
out vec4 tclr;

void main() {
	mat4 mx = dat[0].mx;
	vec4 clr = dat[0].clr;
	float size = dat[0].size;

	gl_Position = mx * vec4( -size, -size, 0, 1);
	tc = vec2(-1, -1);
	tclr = clr;
	gl_PrimitiveID = gl_PrimitiveIDIn;
	EmitVertex();

	gl_Position = mx * vec4( +size, -size, 0, 1);
	tc = vec2(+1, -1);
	tclr = clr;
	gl_PrimitiveID = gl_PrimitiveIDIn;
	EmitVertex();

	gl_Position = mx * vec4( -size, +size, 0, 1);
	tc = vec2(-1, +1);
	tclr = clr;
	gl_PrimitiveID = gl_PrimitiveIDIn;
	EmitVertex();

	gl_Position = mx * vec4( +size, +size, 0, 1);
	tc = vec2(+1, +1);
	tclr = clr;
	gl_PrimitiveID = gl_PrimitiveIDIn;
	EmitVertex();

	EndPrimitive();
}



//@frag
#version 330

in vec2 tc;
in vec4 tclr;
out vec4 res;

void main() {
	float a = 1 - length(tc);
	res = tclr * a;
}

